Users who completed each questions: 


SELECT question, COUNT(DISTINCT user_id)
FROM survey
GROUP BY question;


Creating left join of tables:


SELECT DISTINCT q.user_id, h.user_id IS NOT NULL AS 'is_home_try_on', h.number_of_pairs, p.user_id IS NOT NULL AS 'is_purchase'
FROM quiz q
LEFT JOIN home_try_on h
ON q.user_id = h.user_id
LEFT JOIN purchase p
ON p.user_id = q.user_id
LIMIT 10;


Conversations Quiz--> Home Trying --> Purchase
WITH FUNNEL AS (
SELECT DISTINCT q.user_id, h.user_id IS NOT NULL AS 'is_home_try_on', h.number_of_pairs, p.user_id IS NOT NULL AS 'is_purchase'
FROM quiz q
LEFT JOIN home_try_on h
ON q.user_id = h.user_id
LEFT JOIN purchase p
ON p.user_id = q.user_id
)
SELECT COUNT (user_id) AS "Quiz_takers", SUM (is_home_try_on) AS "Total Home Tries", SUM (is_purchase) AS "Total Purchases"
FROM FUNNEL;






Conversions Difference between 3 pairs vs. 5 pairs to try
WITH FUNNEL AS (
SELECT DISTINCT q.user_id, h.user_id IS NOT NULL AS 'is_home_try_on', h.number_of_pairs, p.user_id IS NOT NULL AS 'is_purchase'
FROM quiz q
LEFT JOIN home_try_on h
ON q.user_id = h.user_id
LEFT JOIN purchase p
ON p.user_id = q.user_id
)
SELECT DISTINCT number_of_pairs, SUM (is_home_try_on) AS "Total Home Tries", SUM (is_purchase) AS "Total Purchases"
FROM FUNNEL
WHERE number_of_pairs IS NOT NULL
GROUP BY number_of_pairs;


Most Purchased
SELECT model_name, style, COUNT (user_id)
FROM purchase
GROUP BY model_name, style;